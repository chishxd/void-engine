[build-system]
requires = ["uv_build >= 0.9.5, <0.10.0"]
build-backend = "uv_build"

[project]
name = "void-engine"
version = "0.1.0"
description = "Welcome to the future! We present you the most advance voice engine to use your computer!"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
dependencies = [
    "textual>=6.4.0",
]

[project.scripts]
void-engine = "void_engine.__main__:main"

[dependency-groups]
dev = [
    "ruff>=0.14.2",
    "textual-dev>=1.8.0",
]

[tool.ruff]
line-length = 88
indent-width = 4

target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort (import sorting)
    "N",  # pep8-naming
    "D",  # Doctrings stuff
    "UP", # pyupgrade
    "B",  # flake8-bugbear (finds likely bugs)
    "A",  # flake8-builtins (prevents shadcowing builtins)
    "C4", # flake8-comprehensions
    "SIM",# flake8-simplify
    "PTH",# flake8-use-pathlib
]

ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
# This is the master switch that Pylance will read.
typeCheckingMode = "strict"

# Tell Pylance where to find your code.
include = ["src"]

# Tell Pylance which virtual environment to use.
venvPath = "."
venv = ".venv"